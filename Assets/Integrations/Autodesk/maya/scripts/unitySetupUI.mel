global string $unityMenuName = "UnityFbxForMaya";
global string $unityMenuDivider = "UnityFbxForMayaDivider";
global string $unityMenuLabel = "Unity";
global string $unityMenuInsertAfter = "exportActiveFileOptions";

global string $unityImportIconPath = "import.png";
global string $unityExportIconPath = "export.png";
global string $unityIconPath = "unity.png";

global string $unityFamilyLabel = "The UnityFbxForMaya plugin allows you to reliably exchange and review your work between Maya and Unity.";
global string $unityImportLabel = "Import FBX file from Unity Project and auto-configure for exporting";
global string $unityExportLabel = "Export Model to Unity";

global string $removeOtherMenuString = "UnityFbxForMaya_RemoveOtherMenu";
global string $unitySendToUnityMenuName = "sendToUnityMenu";


global proc string unityWhatsNewVersion(){
    return `about -q -version`;

}

global proc unitySetupUI(){

global string $removeOtherMenuString;
global string $unitySendToUnityMenuName;

    $isHeadless = `optionVar -q "UnityFbxForMaya_Headless"`;
    if($isHeadless){
        // headless install, don't add UI
        return;
    }
    
    evalDeferred -lowestPriority "buildFileMenu; \
    \
    $removeOtherMenu = `optionVar -q $removeOtherMenuString`;\
    if($removeOtherMenu){\
        menu -e -visible false $unitySendToUnityMenuName;\
    }\
    \
    $parentMenu = $gMainFileMenu; \
    $pluginVersion = unityWhatsNewVersion(); \
    source \"unityCommands.mel\"; \
    menuItem -parent $parentMenu -insertAfter $unityMenuInsertAfter -divider true -longDivider false -version $pluginVersion $unityMenuDivider; \
    menuItem -parent $parentMenu -insertAfter $unityMenuDivider -subMenu true -label $unityMenuLabel -tearOff true -version $pluginVersion -image $unityIconPath -annotation $unityFamilyLabel $unityMenuName; \
    menuItem -parent $unityMenuName -label \"Import\" -version $pluginVersion -image $unityImportIconPath -annotation $unityImportLabel -command \"unityImport\"; \
    menuItem -parent $unityMenuName -label \"Export\" -version $pluginVersion -image $unityExportIconPath -annotation $unityExportLabel -command \"unityExport\";";
}